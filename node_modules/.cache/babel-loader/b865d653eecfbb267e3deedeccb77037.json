{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\nt\\\\companies\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport PropTypes from 'prop-types'; //import { createBrowserHistory } from 'history';\n\nimport { ReactDadata } from 'react-dadata';\nimport { Button, ButtonToolbar, Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { createCompanies } from './actions/companies';\n\nclass App extends Component {\n  componentWillMount() {\n    this.props.fetchData(\"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\", {\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': 'Token 6692478bebb2ef311e5137c8a7f03b26f98aeb72'\n      },\n      body: JSON.stringify({\n        query: 'сбербанк'\n      })\n    });\n  }\n\n  handleCompany(event) {\n    console.log(event.target.parentElement.querySelectorAll('button'));\n    Array.from(event.target.parentElement.querySelectorAll('button')).forEach(item => item.classList.remove('active'));\n    event.target.classList.add('active');\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"choice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0439\"), this.props.companies.map(company => React.createElement(Row, {\n      key: company.data.inn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: true,\n      lg: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"light\",\n      onClick: this.handleCompany,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, company.value)))))); //const history = createBrowserHistory();\n\n    /*return (      \r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"container\" >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <UserList {...this.props} />\r\n            </Route>\r\n            <Route path=\"/users/:userId\" history={history}>\r\n              <Profile {...this.props} />\r\n            </Route>\r\n          </Switch>\r\n          <Slider {...this.props} />      \r\n        </div>\r\n      </BrowserRouter>\r\n    )*/\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    loading: state.loading,\n    companies: state.companies\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: (url, params) => dispatch(createCompanies(url, params))\n  };\n};\n\nApp.propTypes = {\n  children: PropTypes.node\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\projects\\nt\\companies\\src\\App.js"],"names":["React","Component","PropTypes","ReactDadata","Button","ButtonToolbar","Container","Row","Col","connect","createCompanies","App","componentWillMount","props","fetchData","method","mode","credentials","headers","body","JSON","stringify","query","handleCompany","event","console","log","target","parentElement","querySelectorAll","Array","from","forEach","item","classList","remove","add","render","companies","map","company","data","inn","value","mapStateToProps","state","error","loading","mapDispatchToProps","dispatch","url","params","propTypes","children","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AAEA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,SAAhC,EAA2CC,GAA3C,EAAgDC,GAAhD,QAA2D,iBAA3D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAE1BW,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWC,SAAX,CAAqB,oEAArB,EAA2F;AACzFC,MAAAA,MAAM,EAAE,MADiF;AAEzFC,MAAAA,IAAI,EAAE,MAFmF;AAGzFC,MAAAA,WAAW,EAAE,aAH4E;AAIzFC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU,kBAFH;AAGP,yBAAiB;AAHV,OAJgF;AASzFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAE;AADY,OAAf;AATmF,KAA3F;AAaD;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,gBAA3B,CAA4C,QAA5C,CAAZ;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACG,MAAN,CAAaC,aAAb,CAA2BC,gBAA3B,CAA4C,QAA5C,CAAX,EAAkEG,OAAlE,CACEC,IAAI,IACJA,IAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,QAAtB,CAFF;AAIAX,IAAAA,KAAK,CAACG,MAAN,CAAaO,SAAb,CAAuBE,GAAvB,CAA2B,QAA3B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADF,EAEG,KAAKA,KAAL,CAAWyB,SAAX,CAAqBC,GAArB,CACCC,OAAO,IACP,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAR,CAAaC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,KAAKnB,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDiB,OAAO,CAACG,KAA9D,CADF,CADF,CAFD,CAFH,CADF,CADF,CAFO,CAiBP;;AACA;;;;;;;;;;;;;;;AAeD;;AA5DyB;;AA+D5B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFZ;AAGHT,IAAAA,SAAS,EAAEO,KAAK,CAACP;AAHd,GAAP;AAKD,CAND;;AAQA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnC,IAAAA,SAAS,EAAE,CAACoC,GAAD,EAAMC,MAAN,KAAiBF,QAAQ,CAACvC,eAAe,CAACwC,GAAD,EAAMC,MAAN,CAAhB;AAD/B,GAAP;AAGD,CAJD;;AAMAxC,GAAG,CAACyC,SAAJ,GAAgB;AACdC,EAAAA,QAAQ,EAAEnD,SAAS,CAACoD;AADN,CAAhB;AAIA,eAAe7C,OAAO,CAACmC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrC,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//import { createBrowserHistory } from 'history';\r\n\r\nimport { ReactDadata } from 'react-dadata';\r\nimport { Button, ButtonToolbar, Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createCompanies } from './actions/companies';\r\n\r\nclass App extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.fetchData(\"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\", {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': 'Token 6692478bebb2ef311e5137c8a7f03b26f98aeb72'\r\n      },\r\n      body: JSON.stringify({\r\n        query: 'сбербанк'\r\n      })\r\n    })\r\n  }\r\n  \r\n  handleCompany(event) {\r\n    console.log(event.target.parentElement.querySelectorAll('button'))\r\n    Array.from(event.target.parentElement.querySelectorAll('button')).forEach(\r\n      item =>\r\n      item.classList.remove('active')\r\n    );\r\n    event.target.classList.add('active');\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Container className=\"choice\">\r\n          <h1>Список компаний</h1>\r\n          {this.props.companies.map(\r\n            company =>\r\n            <Row key={company.data.inn}>\r\n              <Col xs lg=\"2\">\r\n                <Button variant=\"light\" onClick={this.handleCompany}>{company.value}</Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </div>      \r\n    )\r\n    //const history = createBrowserHistory();\r\n    /*return (      \r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"container\" >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <UserList {...this.props} />\r\n            </Route>\r\n            <Route path=\"/users/:userId\" history={history}>\r\n              <Profile {...this.props} />\r\n            </Route>\r\n          </Switch>\r\n          <Slider {...this.props} />      \r\n        </div>\r\n      </BrowserRouter>\r\n    )*/\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.error,\r\n      loading: state.loading,\r\n      companies: state.companies\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchData: (url, params) => dispatch(createCompanies(url, params))\r\n  };\r\n};\r\n\r\nApp.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}