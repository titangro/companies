{"ast":null,"code":"import initialState from '../constants/initialState';\nimport * as types from '../constants/types';\nexport function comments(state = initialState.users, action) {\n  switch (action.type) {\n    case types.comments.ADD:\n      {\n        const comment = action.comment;\n        let nextState = [];\n\n        for (const user of comment.users) {\n          if (user.id === comment.userId) {\n            user.comments = [...user.comments, {\n              id: user.comments.length ? user.comments[user.comments.length - 1].id + 1 : 1,\n              author: comment.author,\n              phone: comment.phone,\n              title: comment.title,\n              comment: comment.comment\n            }];\n          }\n\n          nextState = [...nextState, user];\n        }\n\n        console.log(nextState);\n        return nextState;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\projects\\nt\\companies\\src\\reducers\\comments.js"],"names":["initialState","types","comments","state","users","action","type","ADD","comment","nextState","user","id","userId","length","author","phone","title","console","log"],"mappings":"AACA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,oBAAvB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAK,GAAGH,YAAY,CAACI,KAAvC,EAA8CC,MAA9C,EAAsD;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,KAAK,CAACC,QAAN,CAAeK,GAApB;AAAyB;AAAA,cACbC,OADa,GACDH,MADC,CACbG,OADa;AAErB,YAAIC,SAAS,GAAG,EAAhB;;AAEA,aAAK,MAAMC,IAAX,IAAmBF,OAAO,CAACJ,KAA3B,EAAkC;AAC9B,cAAIM,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACI,MAAxB,EAAgC;AAC5BF,YAAAA,IAAI,CAACR,QAAL,GAAgB,CAAC,GAAGQ,IAAI,CAACR,QAAT,EAAmB;AACnCS,cAAAA,EAAE,EAAED,IAAI,CAACR,QAAL,CAAcW,MAAd,GAAuBH,IAAI,CAACR,QAAL,CAAcQ,IAAI,CAACR,QAAL,CAAcW,MAAd,GAAuB,CAArC,EAAwCF,EAAxC,GAA6C,CAApE,GAAwE,CADzC;AAEnCG,cAAAA,MAAM,EAAEN,OAAO,CAACM,MAFmB;AAGnCC,cAAAA,KAAK,EAAEP,OAAO,CAACO,KAHoB;AAInCC,cAAAA,KAAK,EAAER,OAAO,CAACQ,KAJoB;AAKnCR,cAAAA,OAAO,EAAEA,OAAO,CAACA;AALkB,aAAnB,CAAhB;AAOH;;AACDC,UAAAA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAeC,IAAf,CAAZ;AACH;;AAEDO,QAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AAEA,eAAOA,SAAP;AACH;;AACD;AACI,aAAON,KAAP;AAvBR;AAyBH","sourcesContent":["\r\nimport initialState from '../constants/initialState';\r\nimport * as types from '../constants/types';\r\n\r\nexport function comments(state = initialState.users, action) {\r\n    switch (action.type) {\r\n        case types.comments.ADD: {\r\n            const { comment } = action;            \r\n            let nextState = [];\r\n\r\n            for (const user of comment.users) {\r\n                if (user.id === comment.userId) {\r\n                    user.comments = [...user.comments, {\r\n                    id: user.comments.length ? user.comments[user.comments.length - 1].id + 1 : 1,\r\n                    author: comment.author,\r\n                    phone: comment.phone,\r\n                    title: comment.title,\r\n                    comment: comment.comment\r\n                    }]\r\n                }\r\n                nextState = [...nextState, user];\r\n            }\r\n\r\n            console.log(nextState)\r\n\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}