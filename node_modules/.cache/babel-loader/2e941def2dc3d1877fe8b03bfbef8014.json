{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\nt\\\\companies\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport PropTypes from 'prop-types'; //import { createBrowserHistory } from 'history';\n\nimport { ReactDadata } from 'react-dadata';\nimport { Button, ThemeProvider } from 'react-bootstrap';\nimport { connect } from 'react-redux'; //import { createCompanies } from './actions/users';\n\nclass App extends Component {\n  componentWillMount() {\n    //this.props.fetchData('https://titangro.mocklab.io/users/')\n    fetch(\"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\", {\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': 'Token 6692478bebb2ef311e5137c8a7f03b26f98aeb72'\n      },\n      body: JSON.stringify({\n        query: 'сбербанк'\n      })\n    }).then(res => res.json()).then(res => console.log(res));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ReactDadata, {\n      token: \"6692478bebb2ef311e5137c8a7f03b26f98aeb72\",\n      query: \"\\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u043A\\u043D\\u043E\\u043F\\u043A\\u0430\"), React.createElement(ThemeProvider, {\n      prefixes: {\n        btn: 'my-btn'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"My Button\"))); //const history = createBrowserHistory();\n\n    /*return (      \r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"container\" >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <UserList {...this.props} />\r\n            </Route>\r\n            <Route path=\"/users/:userId\" history={history}>\r\n              <Profile {...this.props} />\r\n            </Route>\r\n          </Switch>\r\n          <Slider {...this.props} />      \r\n        </div>\r\n      </BrowserRouter>\r\n    )*/\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error,\n    loading: state.loading,\n    users: state.users,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {//fetchData: (url) => dispatch(createUsers(url))\n  };\n};\n\nApp.propTypes = {\n  children: PropTypes.node\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\projects\\nt\\companies\\src\\App.js"],"names":["React","Component","PropTypes","ReactDadata","Button","ThemeProvider","connect","App","componentWillMount","fetch","method","mode","credentials","headers","body","JSON","stringify","query","then","res","json","console","log","render","btn","mapStateToProps","state","error","loading","users","user","mapDispatchToProps","dispatch","propTypes","children","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AAEA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,iBAAtC;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAE1BO,EAAAA,kBAAkB,GAAG;AACnB;AACAC,IAAAA,KAAK,CAAC,oEAAD,EAAuE;AAC1EC,MAAAA,MAAM,EAAE,MADkE;AAE1EC,MAAAA,IAAI,EAAE,MAFoE;AAG1EC,MAAAA,WAAW,EAAE,aAH6D;AAI1EC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU,kBAFH;AAGP,yBAAiB;AAHV,OAJiE;AAS1EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAE;AADY,OAAf;AAToE,KAAvE,CAAL,CAaGC,IAbH,CAaQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAbf,EAcGF,IAdH,CAcQC,GAAG,IAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAdf;AAeD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,0CAAnB;AAA8D,MAAA,KAAK,EAAC,sCAApE;AAA6E,MAAA,WAAW,EAAC,EAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,EAGE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAHF,CADF,CADO,CAUP;;AACA;;;;;;;;;;;;;;;AAeD;;AA/CyB;;AAkD5B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADV;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFZ;AAGHC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAHV;AAIHC,IAAAA,IAAI,EAAEJ,KAAK,CAACI;AAJT,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,CACL;AADK,GAAP;AAGD,CAJD;;AAMAzB,GAAG,CAAC0B,SAAJ,GAAgB;AACdC,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC;AADN,CAAhB;AAIA,eAAe7B,OAAO,CAACmB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CxB,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//import { createBrowserHistory } from 'history';\r\n\r\nimport { ReactDadata } from 'react-dadata';\r\nimport { Button, ThemeProvider } from 'react-bootstrap';\r\n\r\nimport { connect } from 'react-redux';\r\n//import { createCompanies } from './actions/users';\r\n\r\nclass App extends Component {\r\n\r\n  componentWillMount() {\r\n    //this.props.fetchData('https://titangro.mocklab.io/users/')\r\n    fetch(\"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\", {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': 'Token 6692478bebb2ef311e5137c8a7f03b26f98aeb72'\r\n      },\r\n      body: JSON.stringify({\r\n        query: 'сбербанк'\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => console.log(res))\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ReactDadata token=\"6692478bebb2ef311e5137c8a7f03b26f98aeb72\" query=\"Москва\" placeholder=\"\" />\r\n        <Button>кнопка</Button>\r\n        <ThemeProvider prefixes={{ btn: 'my-btn' }}>\r\n          <Button variant=\"primary\">My Button</Button>\r\n        </ThemeProvider>\r\n      </React.Fragment>      \r\n    )\r\n    //const history = createBrowserHistory();\r\n    /*return (      \r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"container\" >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <UserList {...this.props} />\r\n            </Route>\r\n            <Route path=\"/users/:userId\" history={history}>\r\n              <Profile {...this.props} />\r\n            </Route>\r\n          </Switch>\r\n          <Slider {...this.props} />      \r\n        </div>\r\n      </BrowserRouter>\r\n    )*/\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.error,\r\n      loading: state.loading,\r\n      users: state.users,\r\n      user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //fetchData: (url) => dispatch(createUsers(url))\r\n  };\r\n};\r\n\r\nApp.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}