{"ast":null,"code":"import initialState from '../constants/initialState';\nimport * as types from '../constants/types';\nexport function companies(state = initialState.companies, action) {\n  switch (action.type) {\n    case types.companies.CREATE:\n      {\n        const companies = action.companies;\n        let nextState = companies.suggestions;\n        return nextState;\n      }\n\n    default:\n      return state;\n  }\n}\nexport function activeCompany(state = initialState.activeCompany, action) {\n  switch (action.type) {\n    case types.companies.ACTIVATE:\n      {\n        const activeCompany = action.activeCompany;\n        let nextState = activeCompany;\n        return nextState;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\projects\\nt\\companies\\src\\reducers\\companies.js"],"names":["initialState","types","companies","state","action","type","CREATE","nextState","suggestions","activeCompany","ACTIVATE"],"mappings":"AACA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,oBAAvB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAK,GAAGH,YAAY,CAACE,SAAxC,EAAmDE,MAAnD,EAA2D;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACC,SAAN,CAAgBI,MAArB;AAA6B;AAAA,cACjBJ,SADiB,GACHE,MADG,CACjBF,SADiB;AAEzB,YAAIK,SAAS,GAAGL,SAAS,CAACM,WAA1B;AACA,eAAOD,SAAP;AACH;;AACD;AACI,aAAOJ,KAAP;AAPR;AASH;AAED,OAAO,SAASM,aAAT,CAAuBN,KAAK,GAAGH,YAAY,CAACS,aAA5C,EAA2DL,MAA3D,EAAmE;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACC,SAAN,CAAgBQ,QAArB;AAA+B;AAAA,cACnBD,aADmB,GACDL,MADC,CACnBK,aADmB;AAE3B,YAAIF,SAAS,GAAGE,aAAhB;AACA,eAAOF,SAAP;AACH;;AACD;AACI,aAAOJ,KAAP;AAPR;AASH","sourcesContent":["\r\nimport initialState from '../constants/initialState';\r\nimport * as types from '../constants/types';\r\n\r\nexport function companies(state = initialState.companies, action) { \r\n    switch (action.type) {\r\n        case types.companies.CREATE: {\r\n            const { companies } = action;\r\n            let nextState = companies.suggestions;\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function activeCompany(state = initialState.activeCompany, action) {\r\n    switch (action.type) {\r\n        case types.companies.ACTIVATE: {\r\n            const { activeCompany } = action;\r\n            let nextState = activeCompany;\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}