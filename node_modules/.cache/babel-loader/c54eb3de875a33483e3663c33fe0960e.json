{"ast":null,"code":"import initialState from '../constants/initialState';\nimport * as types from '../constants/types';\nexport function users(state = initialState.users, action) {\n  switch (action.type) {\n    case types.users.GET:\n      {\n        const users = action.users;\n        let nextState = Object.assign({}, state);\n\n        for (let user of users) {\n          if (!nextState[user.id]) {\n            nextState[user.id] = user;\n          }\n        }\n\n        return nextState;\n      }\n\n    case types.users.CREATE:\n      {\n        const users = action.users;\n        let nextState = users;\n        return nextState;\n      }\n\n    case types.users.ADD:\n      {\n        let nextState = [...state, {\n          id: state[state.length - 1].id + 1,\n          avatar: \"https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200\",\n          comments: [],\n          name: \"Name\",\n          surname: \"Surname\",\n          position: \"Worker\"\n        }];\n        return nextState;\n      }\n\n    default:\n      return state;\n  }\n}\nexport function user(state = initialState.user, action) {\n  switch (action.type) {\n    case types.users.TOGGLE:\n      {\n        const users = action.users;\n        let nextState = users;\n        return nextState;\n      }\n\n    case types.users.SHOW:\n      {\n        const user = action.user;\n        let nextState = user;\n        return nextState;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\projects\\nt\\companies\\src\\reducers\\users.js"],"names":["initialState","types","users","state","action","type","GET","nextState","Object","assign","user","id","CREATE","ADD","length","avatar","comments","name","surname","position","TOGGLE","SHOW"],"mappings":"AACA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,oBAAvB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAGH,YAAY,CAACE,KAApC,EAA2CE,MAA3C,EAAmD;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACC,KAAN,CAAYI,GAAjB;AAAsB;AAAA,cACVJ,KADU,GACAE,MADA,CACVF,KADU;AAElB,YAAIK,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAhB;;AACA,aAAK,IAAIO,IAAT,IAAiBR,KAAjB,EAAwB;AACpB,cAAI,CAACK,SAAS,CAACG,IAAI,CAACC,EAAN,CAAd,EAAyB;AACrBJ,YAAAA,SAAS,CAACG,IAAI,CAACC,EAAN,CAAT,GAAqBD,IAArB;AACH;AACJ;;AACD,eAAOH,SAAP;AACH;;AACD,SAAKN,KAAK,CAACC,KAAN,CAAYU,MAAjB;AAAyB;AAAA,cACbV,KADa,GACHE,MADG,CACbF,KADa;AAErB,YAAIK,SAAS,GAAGL,KAAhB;AACA,eAAOK,SAAP;AACH;;AACD,SAAKN,KAAK,CAACC,KAAN,CAAYW,GAAjB;AAAsB;AAClB,YAAIN,SAAS,GAAG,CAAC,GAAGJ,KAAJ,EAAW;AACvBQ,UAAAA,EAAE,EAAER,KAAK,CAACA,KAAK,CAACW,MAAN,GAAe,CAAhB,CAAL,CAAwBH,EAAxB,GAA6B,CADV;AAEvBI,UAAAA,MAAM,EAAE,wEAFe;AAGvBC,UAAAA,QAAQ,EAAE,EAHa;AAIvBC,UAAAA,IAAI,EAAE,MAJiB;AAKvBC,UAAAA,OAAO,EAAE,SALc;AAMvBC,UAAAA,QAAQ,EAAE;AANa,SAAX,CAAhB;AAQA,eAAOZ,SAAP;AACH;;AACD;AACI,aAAOJ,KAAP;AA5BR;AA8BH;AAED,OAAO,SAASO,IAAT,CAAcP,KAAK,GAAGH,YAAY,CAACU,IAAnC,EAAyCN,MAAzC,EAAiD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACC,KAAN,CAAYkB,MAAjB;AAAyB;AAAA,cACblB,KADa,GACHE,MADG,CACbF,KADa;AAErB,YAAIK,SAAS,GAAGL,KAAhB;AACA,eAAOK,SAAP;AACH;;AACD,SAAKN,KAAK,CAACC,KAAN,CAAYmB,IAAjB;AAAuB;AAAA,cACXX,IADW,GACFN,MADE,CACXM,IADW;AAEnB,YAAIH,SAAS,GAAGG,IAAhB;AACA,eAAOH,SAAP;AACH;;AACD;AACI,aAAOJ,KAAP;AAZR;AAcH","sourcesContent":["\r\nimport initialState from '../constants/initialState';\r\nimport * as types from '../constants/types';\r\n\r\nexport function users(state = initialState.users, action) { \r\n    switch (action.type) {\r\n        case types.users.GET: {\r\n            const { users } = action;\r\n            let nextState = Object.assign({}, state);\r\n            for (let user of users) {\r\n                if (!nextState[user.id]) {\r\n                    nextState[user.id] = user;\r\n                }\r\n            }\r\n            return nextState;\r\n        }\r\n        case types.users.CREATE: {\r\n            const { users } = action;\r\n            let nextState = users;           \r\n            return nextState;\r\n        }\r\n        case types.users.ADD: {\r\n            let nextState = [...state, {\r\n                id: state[state.length - 1].id + 1,\r\n                avatar: \"https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200\",\r\n                comments: [],\r\n                name: \"Name\",\r\n                surname: \"Surname\",\r\n                position: \"Worker\"\r\n            }];\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function user(state = initialState.user, action) {\r\n    switch (action.type) {\r\n        case types.users.TOGGLE: {\r\n            const { users } = action;\r\n            let nextState = users;           \r\n            return nextState;\r\n        }\r\n        case types.users.SHOW: {\r\n            const { user } = action;\r\n            let nextState = user;\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}