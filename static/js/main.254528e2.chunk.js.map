{"version":3,"sources":["constants/initialState.js","constants/types.js","reducers/root.js","store/configureStore.prod.js","store/configureStore.dev.js","reducers/loading.js","reducers/error.js","reducers/companies.js","store/configureStore.js","actions/error.js","App.js","actions/companies.js","index.js"],"names":["constants_initialState","error","loading","companies","company","managers","app","ERROR","ERROR_DELETE","LOADED","LOADING","CREATE","ACTIVATE","SHOW_MANAGERS","ADD_MANAGER","store","rootReducer","combineReducers","state","arguments","length","undefined","initialState","type","types","action","info","suggestions","nextState","data","parsedManagers","localStorage","JSON","parse","hid","concat","Object","toConsumableArray","manager","companyId","stringify","companyManager","__PRODUCTION__","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","createdStore","createError","dispatch","App","this","props","fetchData","method","mode","credentials","headers","Content-Type","Accept","Authorization","body","query","event","Array","from","target","parentElement","querySelectorAll","forEach","item","classList","remove","add","activateCompany","showManagers","preventDefault","validateForm","console","log","formData","FormData","name","get","surname","patronymic","passport","issue","issueDate","Date","bornDate","inn","addManager","form","getFullYear","getMonth","getDate","deleteError","node","value","replace","toUpperCase","slice","toLowerCase","join","_this","react_default","a","createElement","className","Fragment","Container","map","Row","key","Col","xs","lg","Button","variant","onClick","handleCompany","index","toLocaleDateString","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","placeholder","onChange","Text","handleFio","handlePassportNumber","handlePassportIssue","handlePassportDate","handleBornDate","handleInn","Feedback","style","display","Component","connect","url","params","fetch","then","res","json","catch","err","createCompanies","configureStore","initialReduxState","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.254528e2.chunk.js","sourcesContent":["export default {\r\n    error: null,\r\n    loading: false,\r\n    companies: [],\r\n    company: null,\r\n    managers: []\r\n}","export const app = {\r\n    ERROR: 'companies/app/error',\r\n    ERROR_DELETE: 'companies/app/error/delete',\r\n    LOADED: 'companies/app/loaded',\r\n    LOADING: 'companies/app/loading'\r\n}\r\n\r\nexport const companies = {\r\n    CREATE: 'companies/companies/create',\r\n    ACTIVATE: 'companies/companies/activate',\r\n    SHOW_MANAGERS: 'companies/companies/managers/show',\r\n    ADD_MANAGER: 'companies/companies/managers/add'\r\n}\r\n\r\nexport const data = {\r\n    CREATE: 'companies/data/create',\r\n    GET: 'companies/data/get',\r\n    SHOW: 'companies/data/show',\r\n    TOGGLE: 'companies/comments/toggle',\r\n    ADD: 'companies/data/add'\r\n}","    \r\nimport { combineReducers } from 'redux';\r\n\r\nimport { error } from './error';\r\nimport { loading } from './loading';\r\nimport { companies, company, managers } from './companies';\r\n\r\nconst rootReducer = combineReducers({\r\n    loading,\r\n    error,\r\n    companies,\r\n    company,\r\n    managers\r\n});\r\n\r\nexport default rootReducer;","import thunk from 'redux-thunk';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport rootReducer from '../reducers/root';\r\n\r\nlet store;\r\nexport default function configureStore(initialState) {\r\n    if (store) {\r\n        return store;\r\n    }\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState,\r\n        compose(\r\n            applyMiddleware(thunk),\r\n            typeof window !== 'undefined' && window.devToolsExtension\r\n                ? window.devToolsExtension()\r\n                : f => f\r\n        )\r\n    );\r\n    return store;\r\n}","import thunk from 'redux-thunk';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport rootReducer from '../reducers/root';\r\n\r\nlet store;\r\nexport default initialState => {\r\n    if (store) {\r\n        return store;\r\n    }\r\n    const createdStore = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(thunk),\r\n            typeof window !== 'undefined' && window.devToolsExtension\r\n                ? window.devToolsExtension()\r\n                : f => f\r\n        )\r\n    );\r\n    store = createdStore;\r\n    return store;\r\n};","import initialState from '../constants/initialState';\r\nimport * as types from '../constants/types';\r\n\r\nexport function loading(state = initialState.loading, action) {\r\n    switch (action.type) {\r\n        case types.app.LOADING:\r\n            return true;\r\n        case types.app.LOADED:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import initialState from '../constants/initialState';\r\nimport * as types from '../constants/types';\r\n\r\nexport function error(state = initialState.error, action) {\r\n    switch (action.type) {\r\n        case types.app.ERROR:\r\n            return action.info ? action.error + ': ' + action.info : action.error;\r\n        case types.app.ERROR_DELETE:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport initialState from '../constants/initialState';\r\nimport * as types from '../constants/types';\r\n\r\nexport function companies(state = initialState.companies, action) {\r\n    switch (action.type) {\r\n        case types.companies.CREATE: {\r\n            const { companies } = action;\r\n            let nextState = companies.suggestions;\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function company(state = initialState.company, action) {\r\n    switch (action.type) {\r\n        case types.companies.ACTIVATE: {\r\n            const { company } = action;\r\n            let nextState = company;\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function managers(state = initialState.managers, action) {\r\n    switch (action.type) {\r\n        case types.companies.SHOW_MANAGERS: {\r\n            const { company } = action;\r\n            let nextState = company.data.managers ? company.data.managers : [];\r\n            let parsedManagers = localStorage.managers ? JSON.parse(localStorage.managers) : [];\r\n            parsedManagers = parsedManagers[company.data.hid] ? parsedManagers[company.data.hid] : [];\r\n            nextState = [...nextState, ...parsedManagers];\r\n            return nextState;\r\n        }\r\n        case types.companies.ADD_MANAGER: {\r\n            const { manager, companyId } = action;\r\n            if (!localStorage.managers) {\r\n                let companyManager = {};\r\n                companyManager[companyId] = [manager];\r\n                localStorage.managers = JSON.stringify(companyManager);\r\n            } else {\r\n                let managers = JSON.parse(localStorage.managers);\r\n                managers[companyId] = [...managers[companyId], manager];\r\n                localStorage.managers = JSON.stringify(managers);\r\n            }\r\n            let nextState = [...state, manager];\r\n            return nextState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { __PRODUCTION__ } from 'environs';\r\nimport prodStore from './configureStore.prod';\r\nimport devStore from './configureStore.dev';\r\nexport default (__PRODUCTION__ ? prodStore : devStore);","import * as types from '../constants/types';\r\n\r\nexport function createError(error, info) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.app.ERROR,\r\n            error,\r\n            info\r\n        })    \r\n}\r\n\r\nexport function deleteError() {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.app.ERROR_DELETE\r\n        })    \r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button, Container, Row, Col, Form } from 'react-bootstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createCompanies, activateCompany, showManagers, addManager } from './actions/companies';\r\nimport { createError, deleteError } from './actions/error';\r\n\r\nclass App extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.fetchData(\"https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party\", {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n        'Authorization': 'Token 6692478bebb2ef311e5137c8a7f03b26f98aeb72'\r\n      },\r\n      body: JSON.stringify({\r\n        query: 'сбербанк'\r\n      })\r\n    })\r\n  }\r\n  \r\n  handleCompany(event, company) {\r\n    Array.from(event.target.parentElement.parentElement.parentElement.querySelectorAll('button')).forEach(\r\n      item =>\r\n      item.classList.remove('active')\r\n    );\r\n    event.target.classList.add('active');\r\n    this.props.activateCompany(company);\r\n    this.props.showManagers(company);\r\n  }\r\n\r\n  handleSubmit(event, companyId) {\r\n    event.preventDefault();\r\n    if (this.validateForm(event.target)) {\r\n      console.log('isValid');\r\n\r\n      const formData = new FormData(event.target);\r\n      const name = formData.get('name'),\r\n        surname = formData.get('surname'),\r\n        patronymic = formData.get('patronymic'),\r\n        passport = formData.get('passport'),\r\n        issue = formData.get('issue'),\r\n        issueDate = new Date(formData.get('issue_date')),\r\n        bornDate = new Date(formData.get('born_date')),\r\n        inn = formData.get('inn');\r\n      \r\n      this.props.addManager(companyId, {\r\n        name: `${surname} ${name} ${patronymic}`,\r\n        passport: passport,\r\n        issue: issue,\r\n        issueDate: issueDate,\r\n        bornDate: bornDate,\r\n        inn: inn\r\n      });\r\n    }\r\n  }\r\n\r\n  validateForm(form) {\r\n    const formData = new FormData(form);\r\n    const name = formData.get('name'),\r\n      surname = formData.get('surname'),\r\n      patronymic = formData.get('patronymic'),\r\n      passport = formData.get('passport'),\r\n      issue = formData.get('issue'),\r\n      issueDate = new Date(formData.get('issue_date')),\r\n      bornDate = new Date(formData.get('born_date')),\r\n      inn = formData.get('inn');\r\n\r\n    if (name === '' || surname === '' || patronymic === '' || passport === '' || issue === '' || issueDate === '' || bornDate === '' || inn === '') {\r\n      this.props.createError('Все поля обязательны для заполнения');\r\n      return false;\r\n    } else {\r\n\r\n      if (passport.length !== 11) {\r\n        this.props.createError('Некорректно заполенно поле серии и номера паспорта');\r\n        return false;\r\n      } else if (inn.length !== 12) {\r\n        this.props.createError('Поле ИНН должно содержать не менее 12 цифр');\r\n        return false;\r\n      } else if (issueDate > new Date() || bornDate > issueDate) {\r\n        this.props.createError('Некорректно заполенно поле даты выдачи паспорта');\r\n        return false;\r\n      } else if (bornDate > new Date()) {\r\n        this.props.createError('Некорректно заполенно поле даты рождения');\r\n        return false;\r\n      } else if ( ((new Date()).getFullYear() - bornDate.getFullYear()) < 18 \r\n          || (((new Date()).getFullYear() - bornDate.getFullYear()) === 18 && ((new Date()).getMonth() - bornDate.getMonth() < 0 )) \r\n          || (((new Date()).getFullYear() - bornDate.getFullYear()) === 18 && ((new Date()).getMonth() - bornDate.getMonth()) === 0 && ((new Date()).getDate() - bornDate.getDate() < 0) ) ) {\r\n        this.props.createError('Учредитель не можеть быть несовершеннолетним');\r\n        return false;\r\n      }\r\n\r\n      this.props.deleteError();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  handleFio(node) {\r\n    node.value = node.value.replace(/[^a-zA-ZА-Яа-яЁё]/gi,'').replace(/\\s+/gi,', ');\r\n    node.value = node.value ? node.value[0].toUpperCase() + node.value.slice(1).toLowerCase() : '';\r\n  }\r\n\r\n  handlePassportNumber(node) {\r\n    if (node.value.length < 4)\r\n      node.value = [...node.value.slice(0,4).replace(/[^0-9]/gim,'')].join('');\r\n    else if (node.value.length === 4)\r\n      node.value = [...node.value.slice(0,4).replace(/[^0-9]/gim,''), ' '].join('');\r\n    else\r\n      node.value = [...node.value.slice(0,4).replace(/[^0-9]/gim,''), ' ', ...node.value.slice(5, 11).replace(/[^0-9]/gim,'')].join('');    \r\n  }\r\n\r\n  handlePassportIssue(node) {\r\n    node.value = node.value.replace(/[!@#~`$%^&\";:?*\\/\\\\\\[\\]\\|\\{\\}.,_\\+\\=-]/g, '')\r\n  }\r\n\r\n  handlePassportDate(node) {\r\n    //console.log(node.value)\r\n  }\r\n\r\n  handleBornDate(node) {\r\n    //console.log(node.value)\r\n  }\r\n\r\n  handleInn(node) {\r\n    node.value = node.value.replace(/[^0-9]/gim,'').slice(0,12);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {this.props.companies.length ? <React.Fragment>\r\n          <Container className=\"choice\">\r\n            <h1>Выберите компанию</h1>\r\n            {this.props.companies.map(\r\n              company =>\r\n              <Row key={company.data.inn}>\r\n                <Col xs lg=\"6\">\r\n                  <Button variant=\"light\" onClick={event => this.handleCompany(event, company)}>{company.value}</Button>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Container>\r\n          {this.props.company ?\r\n          <React.Fragment>\r\n            <Container className=\"personal\">\r\n              <h2>Учредители</h2>\r\n              {this.props.managers.length ? \r\n                <React.Fragment>\r\n                  {this.props.managers.map(\r\n                    (manager, index) =>\r\n                    <Container key={index}>\r\n                      <Row>\r\n                        <Col xs lg=\"6\">\r\n                          {manager.name}\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs lg=\"6\">\r\n                          Серия номер паспорта: {manager.passport}\r\n                        </Col>\r\n                        <Col xs lg=\"6\">\r\n                          Кем выдан: {manager.issue}\r\n                        </Col>\r\n                        <Col xs lg=\"6\">\r\n                          Дата выдачи: {(new Date(manager.issueDate)).toLocaleDateString()}\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs lg=\"2\">\r\n                          Дата рождения: {(new Date(manager.bornDate)).toLocaleDateString()}\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col xs lg=\"6\">\r\n                          ИНН: {manager.inn}\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  )}\r\n                </React.Fragment> : <p>В компании нет информации об учредителях</p>}\r\n            </Container>\r\n            <Container className=\"personal\">\r\n              <Row>\r\n                <Col xs lg=\"6\">\r\n                  <h2>Добавить информамцию о учередителях</h2>              \r\n                  <Form onSubmit={(event) => this.handleSubmit(event, this.props.company.data.hid)}>\r\n                    <Form.Group controlId=\"formBasicCompany\">\r\n                      <Form.Label>Компания</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"company\" placeholder=\"Ваша компания\" value={this.props.company.value} onChange={() => {}} />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Выбранная компания\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicSurname\">\r\n                      <Form.Label>Фамилия Имя Отчество</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"surname\" placeholder=\"Фамилия\" onChange={(event) => this.handleFio(event.target)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                      <Form.Control type=\"text\" name=\"name\" placeholder=\"Имя\" onChange={(event) => this.handleFio(event.target)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPatronymic\">\r\n                      <Form.Control type=\"text\" name=\"patronymic\" placeholder=\"Отчество\" onChange={(event) => this.handleFio(event.target)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassport\">\r\n                      <Form.Label>Паспортные данные</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"passport\" placeholder=\"Серия и номер\" onChange={(event) => this.handlePassportNumber(event.target)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassportIssue\">\r\n                      <Form.Control type=\"text\" name=\"issue\" placeholder=\"Кем выдан\" onChange={(event) => this.handlePassportIssue(event.target)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassportDateIssue\">\r\n                      <Form.Control type=\"date\" name=\"issue_date\" placeholder=\"Даты выдачи\" onChange={(event) => this.handlePassportDate(event.target)} />\r\n                      <Form.Text className=\"text-muted\">\r\n                        Даты выдачи\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassport\">\r\n                      <Form.Label>Дата рождения</Form.Label>\r\n                      <Form.Control type=\"date\" name=\"born_date\" placeholder=\"\" onChange={(event) => this.handleBornDate(event.target)} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassport\">\r\n                      <Form.Label>ИНН</Form.Label>\r\n                      <Form.Control type=\"text\" name=\"inn\" placeholder=\"\" onChange={(event) => this.handleInn(event.target)} />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formBasicError\">\r\n                      <Form.Control.Feedback type=\"invalid\" style={{display: this.props.error ? 'block' : 'none'}}>\r\n                        {this.props.error}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Добавить учредителя\r\n                    </Button>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </React.Fragment> : ''}\r\n        </React.Fragment> : ''}\r\n      </div>      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.error,\r\n      loading: state.loading,\r\n      companies: state.companies,\r\n      company: state.company,\r\n      managers: state.managers\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchData: (url, params) => dispatch(createCompanies(url, params)),\r\n    activateCompany: (company) => dispatch(activateCompany(company)),\r\n    createError: (error, info) => dispatch(createError(error, info)),\r\n    deleteError: () => dispatch(deleteError()),\r\n    showManagers: (company) => dispatch(showManagers(company)),\r\n    addManager: (companyId, manager) => dispatch(addManager(companyId, manager))\r\n  };\r\n};\r\n\r\nApp.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as types from '../constants/types';\r\nimport { createError } from './error';\r\n\r\nexport function createCompanies(url, params) {\r\n    return dispatch => {\r\n        return fetch(url, params)\r\n            .then(res => res.json())\r\n            .then(companies => {\r\n                dispatch({\r\n                    type: types.companies.CREATE,\r\n                    companies\r\n                });\r\n            })\r\n            .catch(err => dispatch(createError(err)));\r\n    };\r\n}\r\n\r\nexport function activateCompany(company) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.companies.ACTIVATE,\r\n            company\r\n        })\r\n}\r\n\r\nexport function showManagers(company) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.companies.SHOW_MANAGERS,\r\n            company\r\n        })\r\n}\r\n\r\nexport function addManager(companyId, manager) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.companies.ADD_MANAGER,\r\n            manager,\r\n            companyId\r\n        })\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\nimport initialReduxState from './constants/initialState';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './css/normalize.css';\r\nimport './css/style.css';\r\n\r\nimport App from './App';\r\n\r\nconst store = configureStore(initialReduxState);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}