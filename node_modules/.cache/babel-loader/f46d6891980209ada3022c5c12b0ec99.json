{"ast":null,"code":"import * as types from '../constants/types';\nimport { createError } from './error';\nexport function createCompanies(url, params) {\n  return dispatch => {\n    return fetch(url, params).then(res => res.json()).then(companies => {\n      dispatch({\n        type: types.companies.CREATE,\n        companies\n      });\n    }).catch(err => dispatch(createError(err)));\n  };\n}\nexport function activateCompany(company) {\n  return dispatch => dispatch({\n    type: types.companies.ACTIVATE,\n    company\n  });\n}\nexport function showManagers(managers) {\n  return dispatch => dispatch({\n    type: types.companies.SHOW_MANAGERS,\n    managers\n  });\n}\nexport function addManager(companyId, manager) {\n  return dispatch => dispatch({\n    type: types.companies.ADD_MANAGERS,\n    manager,\n    companyId\n  });\n}","map":{"version":3,"sources":["C:\\projects\\nt\\companies\\src\\actions\\companies.js"],"names":["types","createError","createCompanies","url","params","dispatch","fetch","then","res","json","companies","type","CREATE","catch","err","activateCompany","company","ACTIVATE","showManagers","managers","SHOW_MANAGERS","addManager","companyId","manager","ADD_MANAGERS"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,oBAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,MAA9B,EAAsC;AACzC,SAAOC,QAAQ,IAAI;AACf,WAAOC,KAAK,CAACH,GAAD,EAAMC,MAAN,CAAL,CACFG,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADV,EAEFF,IAFE,CAEGG,SAAS,IAAI;AACfL,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEX,KAAK,CAACU,SAAN,CAAgBE,MADjB;AAELF,QAAAA;AAFK,OAAD,CAAR;AAIH,KAPE,EAQFG,KARE,CAQIC,GAAG,IAAIT,QAAQ,CAACJ,WAAW,CAACa,GAAD,CAAZ,CARnB,CAAP;AASH,GAVD;AAWH;AAED,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACrC,SAAOX,QAAQ,IACXA,QAAQ,CAAC;AACLM,IAAAA,IAAI,EAAEX,KAAK,CAACU,SAAN,CAAgBO,QADjB;AAELD,IAAAA;AAFK,GAAD,CADZ;AAKH;AAED,OAAO,SAASE,YAAT,CAAsBC,QAAtB,EAAgC;AACnC,SAAOd,QAAQ,IACXA,QAAQ,CAAC;AACLM,IAAAA,IAAI,EAAEX,KAAK,CAACU,SAAN,CAAgBU,aADjB;AAELD,IAAAA;AAFK,GAAD,CADZ;AAKH;AAED,OAAO,SAASE,UAAT,CAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;AAC3C,SAAOlB,QAAQ,IACXA,QAAQ,CAAC;AACLM,IAAAA,IAAI,EAAEX,KAAK,CAACU,SAAN,CAAgBc,YADjB;AAELD,IAAAA,OAFK;AAGLD,IAAAA;AAHK,GAAD,CADZ;AAMH","sourcesContent":["import * as types from '../constants/types';\r\nimport { createError } from './error';\r\n\r\nexport function createCompanies(url, params) {\r\n    return dispatch => {\r\n        return fetch(url, params)\r\n            .then(res => res.json())\r\n            .then(companies => {\r\n                dispatch({\r\n                    type: types.companies.CREATE,\r\n                    companies\r\n                });\r\n            })\r\n            .catch(err => dispatch(createError(err)));\r\n    };\r\n}\r\n\r\nexport function activateCompany(company) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.companies.ACTIVATE,\r\n            company\r\n        })\r\n}\r\n\r\nexport function showManagers(managers) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.companies.SHOW_MANAGERS,\r\n            managers\r\n        })\r\n}\r\n\r\nexport function addManager(companyId, manager) {\r\n    return dispatch => \r\n        dispatch({\r\n            type: types.companies.ADD_MANAGERS,\r\n            manager,\r\n            companyId\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}